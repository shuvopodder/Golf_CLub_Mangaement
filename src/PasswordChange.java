
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shuvo Podder
 */
public class PasswordChange extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form PasswordChange
     */
    public PasswordChange() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtOldPassword = new javax.swing.JTextField();
        txtNewPassword = new javax.swing.JTextField();
        txtConfirmPassword = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.setForeground(new java.awt.Color(0, 0, 51));

        jLabel1.setText("User Name");

        jLabel2.setText("Old Password");

        jLabel3.setText("New Password");

        jLabel4.setText("Confirm Password");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Change Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsername)
                    .addComponent(txtOldPassword)
                    .addComponent(txtNewPassword)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addGap(73, 73, 73))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String Newpass = String.valueOf(txtNewPassword.getText());
            String ConfPass = String.valueOf(txtConfirmPassword.getText());
            String OldPass = String.valueOf(txtOldPassword.getText());
            String uName = txtUsername.getText();
            if (uName.equals("")) {

                JOptionPane.showMessageDialog(this, "Please enter a username",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;

            } else if (OldPass.equals("")) {

                JOptionPane.showMessageDialog(this, "Please enter a old password",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;

            } else if (Newpass.equals("")) {

                JOptionPane.showMessageDialog(this, "Please enter a new password",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;

            } else if (ConfPass.equals("")) {

                JOptionPane.showMessageDialog(this, "Please enter a confirmed password",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if (Newpass.length() < 5) {

                JOptionPane.showMessageDialog(this,
                        "The New Password Should be of Atleast 5 Characters",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if ((Newpass).equals(OldPass)) {

                JOptionPane.showMessageDialog(this,
                        "Password is same..Re-enter new password", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if (!(Newpass).equals(ConfPass)) {

                JOptionPane.showMessageDialog(this,
                        "New Password doesn't match with Confirmed Password",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            con = Connect.ConnectDB();
            String sql = "select Username,Password from login where Username='" + txtUsername.getText() + "' and Password= '" + txtOldPassword.getText() + "'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                String usrname = rs.getString("username").trim();
                String passwd = rs.getString("password").trim();
                if (uName.equals(usrname) && OldPass.equals(passwd)) {
                    con = Connect.ConnectDB();
                    String sql1 = "update login set password= '" + Newpass + "' where Username= '" + uName + "' and password = '" + OldPass + "'";
                    Statement stmt = con.createStatement();
                    stmt.execute(sql1.toString());
                    stmt.close();
                    JOptionPane.showMessageDialog(this, "Password Successfully Changed");
                    this.dispose();
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "invalid user name or password", "Error", JOptionPane.ERROR_MESSAGE);
                    txtUsername.setText("");
                    txtOldPassword.setText("");
                    txtNewPassword.setText("");
                    txtConfirmPassword.setText("");
                    return;
                }
            }
        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    private void txtConfirmPasswordKeyPressed(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                String Newpass = String.valueOf(txtNewPassword.getText());
                String ConfPass = String.valueOf(txtConfirmPassword.getText());
                String OldPass = String.valueOf(txtOldPassword.getText());
                String uName = txtUsername.getText();
                if (uName.equals("")) {

                    JOptionPane.showMessageDialog(this, "Please enter a username",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;

                } else if (OldPass.equals("")) {

                    JOptionPane.showMessageDialog(this, "Please enter a old password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;

                } else if (Newpass.equals("")) {

                    JOptionPane.showMessageDialog(this, "Please enter a new password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;

                } else if (ConfPass.equals("")) {

                    JOptionPane.showMessageDialog(this, "Please enter a confirmed password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } else if (Newpass.length() < 5) {

                    JOptionPane.showMessageDialog(this,
                            "The New Password Should be of Atleast 5 Characters",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } else if ((Newpass).equals(OldPass)) {

                    JOptionPane.showMessageDialog(this,
                            "Password is same..Re-enter new password", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } else if (!(Newpass).equals(ConfPass)) {

                    JOptionPane.showMessageDialog(this,
                            "New Password doesn't match with Confirmed Password",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                con = Connect.ConnectDB();
                String sql = "select Username,Password from login where Username='" + txtUsername.getText() + "' and Password= '" + txtOldPassword.getText() + "'";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                while (rs.next()) {
                    String usrname = rs.getString("username").trim();
                    String passwd = rs.getString("password").trim();
                    if (uName.equals(usrname) && OldPass.equals(passwd)) {
                        con = Connect.ConnectDB();
                        String sql1 = "update login set password= '" + Newpass + "' where Username= '" + uName + "' and password = '" + OldPass + "'";
                        Statement stmt = con.createStatement();
                        stmt.execute(sql1.toString());
                        stmt.close();
                        JOptionPane.showMessageDialog(this, "Password Successfully Changed");
                        this.dispose();
                        return;
                    } else {
                        JOptionPane.showMessageDialog(this, "invalid user name or password", "Error", JOptionPane.ERROR_MESSAGE);
                        txtUsername.setText("");
                        txtOldPassword.setText("");
                        txtNewPassword.setText("");
                        txtConfirmPassword.setText("");
                        return;
                    }
                }
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }

        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordChange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordChange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtConfirmPassword;
    private javax.swing.JTextField txtNewPassword;
    private javax.swing.JTextField txtOldPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
